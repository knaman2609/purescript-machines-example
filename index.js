// Generated by purs bundle 0.11.7
var PS = {};
(function(exports) {
    "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  exports["unit"] = $foreign.unit;
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Data_Profunctor_Strong = PS["Data.Profunctor.Strong"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var MealyT = function (x) {
      return x;
  };
  var Emit = (function () {
      function Emit(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Emit.create = function (value0) {
          return function (value1) {
              return new Emit(value0, value1);
          };
      };
      return Emit;
  })();
  var runMealyT = function (v) {
      return v;
  };
  exports["MealyT"] = MealyT;
  exports["runMealyT"] = runMealyT;
  exports["Emit"] = Emit;
})(PS["Data.Machine.Mealy"] = PS["Data.Machine.Mealy"] || {});
(function(exports) {exports.testImpl = function(x) {
    return function() {
      console.log(x);

      return "MealyT " + x;
    }
  }
})(PS["Main"] = PS["Main"] || {});
(function(exports) {
  // Generated by purs version 0.11.7
  "use strict";
  var $foreign = PS["Main"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Data_Function = PS["Data.Function"];
  var Data_Machine_Mealy = PS["Data.Machine.Mealy"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var test = function (inp) {
      return function __do() {
          var v = $foreign.testImpl(inp)();
          return new Data_Machine_Mealy.Emit(v, Data_Machine_Mealy.MealyT(test));
      };
  };
  var fn = Data_Machine_Mealy.MealyT(test);
  var main = function __do() {
      var v = Data_Machine_Mealy.runMealyT(fn)("hello")();
      return Data_Unit.unit;
  };
  exports["test"] = test;
  exports["fn"] = fn;
  exports["main"] = main;
  exports["testImpl"] = $foreign.testImpl;
})(PS["Main"] = PS["Main"] || {});
PS["Main"].main();
